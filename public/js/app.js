var Artyom=function(){function e(){this.ArtyomCommands=[],this.ArtyomVoicesIdentifiers={"de-DE":["Google Deutsch","de-DE","de_DE"],"es-ES":["Google español","es-ES","es_ES","es-MX","es_MX"],"it-IT":["Google italiano","it-IT","it_IT"],"jp-JP":["Google 日本人","ja-JP","ja_JP"],"en-US":["Google US English","en-US","en_US"],"en-GB":["Google UK English Male","Google UK English Female","en-GB","en_GB"],"pt-BR":["Google português do Brasil","pt-PT","pt-BR","pt_PT","pt_BR"],"pt-PT":["Google português do Brasil","pt-PT","pt_PT"],"ru-RU":["Google русский","ru-RU","ru_RU"],"nl-NL":["Google Nederlands","nl-NL","nl_NL"],"fr-FR":["Google français","fr-FR","fr_FR"],"pl-PL":["Google polski","pl-PL","pl_PL"],"id-ID":["Google Bahasa Indonesia","id-ID","id_ID"],"hi-IN":["Google हिन्दी","hi-IN","hi_IN"],"zh-CN":["Google 普通话（中国大陆）","zh-CN","zh_CN"],"zh-HK":["Google 粤語（香港）","zh-HK","zh_HK"],native:["native"]},window.hasOwnProperty("speechSynthesis")?speechSynthesis.getVoices():console.error("Artyom.js can't speak without the Speech Synthesis API."),window.hasOwnProperty("webkitSpeechRecognition")?this.ArtyomWebkitSpeechRecognition=new window.webkitSpeechRecognition:console.error("Artyom.js can't recognize voice without the Speech Recognition API."),this.ArtyomProperties={lang:"en-GB",recognizing:!1,continuous:!1,speed:1,volume:1,listen:!1,mode:"normal",debug:!1,helpers:{redirectRecognizedTextOutput:null,remoteProcessorHandler:null,lastSay:null,fatalityPromiseCallback:null},executionKeyword:null,obeyKeyword:null,speaking:!1,obeying:!0,soundex:!1,name:null},this.ArtyomGarbageCollection=[],this.ArtyomFlags={restartRecognition:!1},this.ArtyomGlobalEvents={ERROR:"ERROR",SPEECH_SYNTHESIS_START:"SPEECH_SYNTHESIS_START",SPEECH_SYNTHESIS_END:"SPEECH_SYNTHESIS_END",TEXT_RECOGNIZED:"TEXT_RECOGNIZED",COMMAND_RECOGNITION_START:"COMMAND_RECOGNITION_START",COMMAND_RECOGNITION_END:"COMMAND_RECOGNITION_END",COMMAND_MATCHED:"COMMAND_MATCHED",NOT_COMMAND_MATCHED:"NOT_COMMAND_MATCHED"},this.Device={isMobile:!1,isChrome:!0},(navigator.userAgent.match(/Android/i)||navigator.userAgent.match(/webOS/i)||navigator.userAgent.match(/iPhone/i)||navigator.userAgent.match(/iPad/i)||navigator.userAgent.match(/iPod/i)||navigator.userAgent.match(/BlackBerry/i)||navigator.userAgent.match(/Windows Phone/i))&&(this.Device.isMobile=!0),-1==navigator.userAgent.indexOf("Chrome")&&(this.Device.isChrome=!1),this.ArtyomVoice={default:!1,lang:"en-GB",localService:!1,name:"Google UK English Male",voiceURI:"Google UK English Male"}}return e.prototype.addCommands=function(e){var t=this,o=function(e){e.hasOwnProperty("indexes")?t.ArtyomCommands.push(e):console.error("The given command doesn't provide any index to execute.")};if(e instanceof Array)for(var r=0;r<e.length;r++)o(e[r]);else o(e);return!0},e.prototype.clearGarbageCollection=function(){return this.ArtyomGarbageCollection=[]},e.prototype.debug=function(e,t){var o="[v"+this.getVersion()+"] Artyom.js";if(!0===this.ArtyomProperties.debug)switch(t){case"error":console.log("%c"+o+":%c "+e,"background: #C12127; color: black;","color:black;");break;case"warn":console.warn(e);break;case"info":console.log("%c"+o+":%c "+e,"background: #4285F4; color: #FFFFFF","color:black;");break;default:console.log("%c"+o+":%c "+e,"background: #005454; color: #BFF8F8","color:black;")}},e.prototype.detectErrors=function(){if("file:"==window.location.protocol)return e="Error: running Artyom directly from a file. The APIs require a different communication protocol like HTTP or HTTPS",console.error(e),{code:"artyom_error_localfile",message:e};if(this.Device.isChrome)return"https:"!=window.location.protocol&&console.warn("Warning: artyom is being executed using the '"+window.location.protocol+"' protocol. The continuous mode requires a secure protocol (HTTPS)"),!1;var e="Error: the Speech Recognition and Speech Synthesis APIs require the Google Chrome Browser to work.";return console.error(e),{code:"artyom_error_browser_unsupported",message:e}},e.prototype.emptyCommands=function(){return this.ArtyomCommands=[]},e.prototype.execute=function(e){var t=this;if(e){if(t.ArtyomProperties.name){if(0!=e.indexOf(t.ArtyomProperties.name))return void t.debug('Artyom requires with a name "'+t.ArtyomProperties.name+"\" but the name wasn't spoken.","warn");e=e.substr(t.ArtyomProperties.name.length)}for(t.debug(">> "+e),l=0;l<t.ArtyomCommands.length;l++){for(var o=(u=t.ArtyomCommands[l]).indexes,r=-1,n="",i=0;i<o.length;i++)if(p=o[i],u.smart){if(p instanceof RegExp)p.test(e)&&(t.debug(">> REGEX "+p.toString()+" MATCHED AGAINST "+e+" WITH INDEX "+i+" IN COMMAND ","info"),r=parseInt(i.toString()));else if(-1!=p.indexOf("*")){var s=p.split("*");if(2<s.length){console.warn("Artyom found a smart command with "+(s.length-1)+" wildcards. Artyom only support 1 wildcard for each command. Sorry");continue}var a=s[0],c=s[1];""==c||" "==c?-1==e.indexOf(a)&&-1==e.toLowerCase().indexOf(a.toLowerCase())||(n=(n=e.replace(a,"")).toLowerCase().replace(a.toLowerCase(),""),r=parseInt(i.toString())):-1==e.indexOf(a)&&-1==e.toLowerCase().indexOf(a.toLowerCase())||-1==e.indexOf(c)&&-1==e.toLowerCase().indexOf(c.toLowerCase())||(n=(n=(n=e.replace(a,"").replace(c,"")).toLowerCase().replace(a.toLowerCase(),"").replace(c.toLowerCase(),"")).toLowerCase().replace(c.toLowerCase(),""),r=parseInt(i.toString()))}else console.warn("Founded command marked as SMART but have no wildcard in the indexes, remove the SMART for prevent extensive memory consuming or add the wildcard *");if(0<=r){r=parseInt(i.toString());break}}if(0<=r)return t.triggerEvent(t.ArtyomGlobalEvents.COMMAND_MATCHED),{index:r,instruction:u,wildcard:{item:n,full:e}}}for(l=0;l<t.ArtyomCommands.length;l++){for(o=(u=t.ArtyomCommands[l]).indexes,r=-1,i=0;i<o.length;i++)if(p=o[i],!u.smart){if(e===p){t.debug(">> MATCHED FULL EXACT OPTION "+p+" AGAINST "+e+" WITH INDEX "+i+" IN COMMAND ","info"),r=parseInt(i.toString());break}if(e.toLowerCase()===p.toLowerCase()){t.debug(">> MATCHED OPTION CHANGING ALL TO LOWERCASE "+p+" AGAINST "+e+" WITH INDEX "+i+" IN COMMAND ","info"),r=parseInt(i.toString());break}}if(0<=r)return t.triggerEvent(t.ArtyomGlobalEvents.COMMAND_MATCHED),{index:r,instruction:u}}for(l=0;l<t.ArtyomCommands.length;l++){for(o=(u=t.ArtyomCommands[l]).indexes,r=-1,i=0;i<o.length;i++)if(!u.smart){if(p=o[i],0<=e.indexOf(p)){t.debug(">> MATCHED INDEX EXACT OPTION "+p+" AGAINST "+e+" WITH INDEX "+i+" IN COMMAND ","info"),r=parseInt(i.toString());break}if(0<=e.toLowerCase().indexOf(p.toLowerCase())){t.debug(">> MATCHED INDEX OPTION CHANGING ALL TO LOWERCASE "+p+" AGAINST "+e+" WITH INDEX "+i+" IN COMMAND ","info"),r=parseInt(i.toString());break}}if(0<=r)return t.triggerEvent(t.ArtyomGlobalEvents.COMMAND_MATCHED),{index:r,instruction:u}}if(t.ArtyomProperties.soundex)for(var l=0;l<t.ArtyomCommands.length;l++){var u=t.ArtyomCommands[l];for(o=u.indexes,r=-1,i=0;i<o.length;i++){var p=o[i];if(!u.smart&&t.soundex(e)==t.soundex(p)){t.debug(">> Matched Soundex command '"+p+"' AGAINST '"+e+"' with index "+i,"info"),r=parseInt(i.toString()),t.triggerEvent(t.ArtyomGlobalEvents.COMMAND_MATCHED);var m={index:r,instruction:u};return m}}}t.debug("Event reached : "+t.ArtyomGlobalEvents.NOT_COMMAND_MATCHED),t.triggerEvent(t.ArtyomGlobalEvents.NOT_COMMAND_MATCHED)}else console.warn("Internal error: Execution of empty command")},e.prototype.fatality=function(){var o=this;return new Promise(function(e,t){o.ArtyomProperties.helpers.fatalityPromiseCallback=e;try{o.ArtyomFlags.restartRecognition=!1,o.ArtyomWebkitSpeechRecognition.stop()}catch(e){t(e)}})},e.prototype.getAvailableCommands=function(){return this.ArtyomCommands},e.prototype.getVoices=function(){return window.speechSynthesis.getVoices()},e.prototype.speechSupported=function(){return"speechSynthesis"in window},e.prototype.recognizingSupported=function(){return"webkitSpeechRecognition"in window},e.prototype.shutUp=function(){if("speechSynthesis"in window)for(;window.speechSynthesis.cancel(),!0===window.speechSynthesis.pending;);this.ArtyomProperties.speaking=!1,this.clearGarbageCollection()},e.prototype.getProperties=function(){return this.ArtyomProperties},e.prototype.getLanguage=function(){return this.ArtyomProperties.lang},e.prototype.getVersion=function(){return"1.0.6"},e.prototype.hey=function(e,t){var o,n,i=this;if(this.Device.isMobile?(this.ArtyomWebkitSpeechRecognition.continuous=!1,this.ArtyomWebkitSpeechRecognition.interimResults=!1,this.ArtyomWebkitSpeechRecognition.maxAlternatives=1):(this.ArtyomWebkitSpeechRecognition.continuous=!0,this.ArtyomWebkitSpeechRecognition.interimResults=!0),this.ArtyomWebkitSpeechRecognition.lang=this.ArtyomProperties.lang,this.ArtyomWebkitSpeechRecognition.onstart=function(){i.debug("Event reached : "+i.ArtyomGlobalEvents.COMMAND_RECOGNITION_START),i.triggerEvent(i.ArtyomGlobalEvents.COMMAND_RECOGNITION_START),i.ArtyomProperties.recognizing=!0,o=!0,e()},this.ArtyomWebkitSpeechRecognition.onerror=function(e){t(e.error),i.triggerEvent(i.ArtyomGlobalEvents.ERROR,{code:e.error}),"audio-capture"==e.error&&(o=!1),"not-allowed"==e.error&&(o=!1,e.timeStamp-void 0<100?i.triggerEvent(i.ArtyomGlobalEvents.ERROR,{code:"info-blocked",message:"Artyom needs the permision of the microphone, is blocked."}):i.triggerEvent(i.ArtyomGlobalEvents.ERROR,{code:"info-denied",message:"Artyom needs the permision of the microphone, is denied"}))},i.ArtyomWebkitSpeechRecognition.onend=function(){!0===i.ArtyomFlags.restartRecognition?(!0===o?(i.ArtyomWebkitSpeechRecognition.start(),i.debug("Continuous mode enabled, restarting","info")):console.error("Verify the microphone and check for the table of errors in sdkcarlos.github.io/sites/artyom.html to solve your problem. If you want to give your user a message when an error appears add an artyom listener"),i.triggerEvent(i.ArtyomGlobalEvents.COMMAND_RECOGNITION_END,{code:"continuous_mode_enabled",message:"OnEnd event reached with continuous mode"})):i.ArtyomProperties.helpers.fatalityPromiseCallback&&(setTimeout(function(){i.ArtyomProperties.helpers.fatalityPromiseCallback()},500),i.triggerEvent(i.ArtyomGlobalEvents.COMMAND_RECOGNITION_END,{code:"continuous_mode_disabled",message:"OnEnd event reached without continuous mode"})),i.ArtyomProperties.recognizing=!1},"normal"==i.ArtyomProperties.mode&&(n=function(e){if(i.ArtyomCommands.length){var t=e.results.length;i.triggerEvent(i.ArtyomGlobalEvents.TEXT_RECOGNIZED);for(var o=e.resultIndex;o<t;++o){var r=e.results[o][0].transcript;if(e.results[o].isFinal){var n=i.execute(r.trim());if("function"==typeof i.ArtyomProperties.helpers.redirectRecognizedTextOutput&&i.ArtyomProperties.helpers.redirectRecognizedTextOutput(r,!0),n&&1==i.ArtyomProperties.recognizing){i.debug("<< Executing Matching Recognition in normal mode >>","info"),i.ArtyomWebkitSpeechRecognition.stop(),i.ArtyomProperties.recognizing=!1,n.wildcard?n.instruction.action(n.index,n.wildcard.item,n.wildcard.full):n.instruction.action(n.index);break}}else{if("function"==typeof i.ArtyomProperties.helpers.redirectRecognizedTextOutput&&i.ArtyomProperties.helpers.redirectRecognizedTextOutput(r,!1),"string"==typeof i.ArtyomProperties.executionKeyword&&-1!=r.indexOf(i.ArtyomProperties.executionKeyword)&&(n=i.execute(r.replace(i.ArtyomProperties.executionKeyword,"").trim()))&&1==i.ArtyomProperties.recognizing){i.debug("<< Executing command ordered by ExecutionKeyword >>","info"),i.ArtyomWebkitSpeechRecognition.stop(),i.ArtyomProperties.recognizing=!1,n.wildcard?n.instruction.action(n.index,n.wildcard.item,n.wildcard.full):n.instruction.action(n.index);break}i.debug("Normal mode : "+r)}}}else i.debug("No commands to process in normal mode.")}),"quick"==i.ArtyomProperties.mode&&(n=function(e){if(i.ArtyomCommands.length){var t=e.results.length;i.triggerEvent(i.ArtyomGlobalEvents.TEXT_RECOGNIZED);for(var o=e.resultIndex;o<t;++o){var r=e.results[o][0].transcript;if(e.results[o].isFinal){if(n=i.execute(r.trim()),"function"==typeof i.ArtyomProperties.helpers.redirectRecognizedTextOutput&&i.ArtyomProperties.helpers.redirectRecognizedTextOutput(r,!1),n&&1==i.ArtyomProperties.recognizing){i.debug("<< Executing Matching Recognition in quick mode >>","info"),i.ArtyomWebkitSpeechRecognition.stop(),i.ArtyomProperties.recognizing=!1,n.wildcard?n.instruction.action(n.index,n.wildcard.item):n.instruction.action(n.index);break}}else{var n=i.execute(r.trim());if("function"==typeof i.ArtyomProperties.helpers.redirectRecognizedTextOutput&&i.ArtyomProperties.helpers.redirectRecognizedTextOutput(r,!0),n&&1==i.ArtyomProperties.recognizing){i.debug("<< Executing Matching Recognition in quick mode >>","info"),i.ArtyomWebkitSpeechRecognition.stop(),i.ArtyomProperties.recognizing=!1,n.wildcard?n.instruction.action(n.index,n.wildcard.item):n.instruction.action(n.index);break}}i.debug("Quick mode : "+r)}}else i.debug("No commands to process.")}),"remote"==i.ArtyomProperties.mode&&(n=function(e){var t=e.results.length;if(i.triggerEvent(i.ArtyomGlobalEvents.TEXT_RECOGNIZED),"function"!=typeof i.ArtyomProperties.helpers.remoteProcessorHandler)return i.debug("The remoteProcessorService is undefined.","warn");for(var o=e.resultIndex;o<t;++o){var r=e.results[o][0].transcript;i.ArtyomProperties.helpers.remoteProcessorHandler({text:r,isFinal:e.results[o].isFinal})}}),i.ArtyomWebkitSpeechRecognition.onresult=function(e){if(i.ArtyomProperties.obeying)n(e);else{if(!i.ArtyomProperties.obeyKeyword)return;for(var t="",o="",r=0;r<e.results.length;++r)e.results[r].isFinal?t+=e.results[r][0].transcript:o+=e.results[r][0].transcript;i.debug("Artyom is not obeying","warn"),(-1<o.indexOf(i.ArtyomProperties.obeyKeyword)||-1<t.indexOf(i.ArtyomProperties.obeyKeyword))&&(i.ArtyomProperties.obeying=!0)}},i.ArtyomProperties.recognizing)i.ArtyomWebkitSpeechRecognition.stop(),i.debug("Event reached : "+i.ArtyomGlobalEvents.COMMAND_RECOGNITION_END),i.triggerEvent(i.ArtyomGlobalEvents.COMMAND_RECOGNITION_END);else try{i.ArtyomWebkitSpeechRecognition.start()}catch(e){i.triggerEvent(i.ArtyomGlobalEvents.ERROR,{code:"recognition_overlap",message:"A webkitSpeechRecognition instance has been started while there's already running. Is recommendable to restart the Browser"})}},e.prototype.initialize=function(e){var o=this;return"object"!=typeof e?Promise.reject("You must give the configuration for start artyom properly."):(e.hasOwnProperty("lang")&&(o.ArtyomVoice=o.getVoice(e.lang),o.ArtyomProperties.lang=e.lang),e.hasOwnProperty("continuous")&&(e.continuous?(this.ArtyomProperties.continuous=!0,this.ArtyomFlags.restartRecognition=!0):(this.ArtyomProperties.continuous=!1,this.ArtyomFlags.restartRecognition=!1)),e.hasOwnProperty("speed")&&(this.ArtyomProperties.speed=e.speed),e.hasOwnProperty("soundex")&&(this.ArtyomProperties.soundex=e.soundex),e.hasOwnProperty("executionKeyword")&&(this.ArtyomProperties.executionKeyword=e.executionKeyword),e.hasOwnProperty("obeyKeyword")&&(this.ArtyomProperties.obeyKeyword=e.obeyKeyword),e.hasOwnProperty("volume")&&(this.ArtyomProperties.volume=e.volume),e.hasOwnProperty("listen")&&(this.ArtyomProperties.listen=e.listen),e.hasOwnProperty("name")&&(this.ArtyomProperties.name=e.name),e.hasOwnProperty("debug")?this.ArtyomProperties.debug=e.debug:console.warn("The initialization doesn't provide how the debug mode should be handled. Is recommendable to set this value either to true or false."),e.mode&&(this.ArtyomProperties.mode=e.mode),!0===this.ArtyomProperties.listen?new Promise(function(e,t){o.hey(e,t)}):Promise.resolve(!0))},e.prototype.on=function(o,r){var n=this;return{then:function(e){var t={indexes:o,action:e};r&&(t.smart=!0),n.addCommands(t)}}},e.prototype.triggerEvent=function(e,t){var o=new CustomEvent(e,{detail:t});return document.dispatchEvent(o),o},e.prototype.repeatLastSay=function(e){var t=this.ArtyomProperties.helpers.lastSay;if(e)return t;null!=t&&this.say(t.text)},e.prototype.when=function(e,t){return document.addEventListener(e,function(e){t(e.detail)},!1)},e.prototype.remoteProcessorService=function(e){return this.ArtyomProperties.helpers.remoteProcessorHandler=e,!0},e.prototype.voiceAvailable=function(e){return void 0!==this.getVoice(e)},e.prototype.isObeying=function(){return this.ArtyomProperties.obeying},e.prototype.obey=function(){return this.ArtyomProperties.obeying=!0},e.prototype.dontObey=function(){return this.ArtyomProperties.obeying=!1},e.prototype.isSpeaking=function(){return this.ArtyomProperties.speaking},e.prototype.isRecognizing=function(){return this.ArtyomProperties.recognizing},e.prototype.getNativeApi=function(){return this.ArtyomWebkitSpeechRecognition},e.prototype.getGarbageCollection=function(){return this.ArtyomGarbageCollection},e.prototype.getVoice=function(e){var o=this.ArtyomVoicesIdentifiers[e];o||(console.warn("The providen language "+e+" isn't available, using English Great britain as default"),o=this.ArtyomVoicesIdentifiers["en-GB"]);for(var r=void 0,n=speechSynthesis.getVoices(),t=o.length,i=0;i<t&&"break"!==function(t){var e=n.filter(function(e){return e.name==o[t]||e.lang==o[t]})[0];if(e)return r=e,"break"}(i);i++);return r},e.prototype.newDictation=function(n){if(!this.recognizingSupported())return console.error("SpeechRecognition is not supported in this browser"),!1;var r=new window.webkitSpeechRecognition;return r.continuous=!0,r.interimResults=!0,r.lang=this.ArtyomProperties.lang,r.onresult=function(e){for(var t="",o="",r=0;r<e.results.length;++r)e.results[r].isFinal?t+=e.results[r][0].transcript:o+=e.results[r][0].transcript;n.onResult&&n.onResult(o,t)},new function(){var e=r,t=!0,o=!1;this.onError=null,this.start=function(){!0===n.continuous&&(o=!0),e.onstart=function(){"function"==typeof n.onStart&&!0===t&&n.onStart()},e.onend=function(){!0===o?(t=!1,e.start()):(t=!0,"function"==typeof n.onEnd&&n.onEnd())},e.start()},this.stop=function(){o=!1,e.stop()},"function"==typeof n.onError&&(e.onerror=n.onError)}},e.prototype.newPrompt=function(r){"object"!=typeof r&&console.error("Expected the prompt configuration.");var n=Object.assign([],this.ArtyomCommands),i=this;this.emptyCommands();var e={description:"Setting the artyom commands only for the prompt. The commands will be restored after the prompt finishes",indexes:r.options,action:function(e,t){i.ArtyomCommands=n;var o=r.onMatch(e,t);"function"==typeof o?o():console.error("onMatch function expects a returning function to be executed")}};r.smart&&(e.smart=!0),this.addCommands(e),void 0!==r.beforePrompt&&r.beforePrompt();var t={onStart:function(){void 0!==r.onStartPrompt&&r.onStartPrompt()},onEnd:function(){void 0!==r.onEndPrompt&&r.onEndPrompt()}};this.say(r.question,t)},e.prototype.sayRandom=function(e){if(e instanceof Array){var t=Math.floor(Math.random()*e.length);return this.say(e[t]),{text:e[t],index:t}}return console.error("Random quotes must be in an array !"),null},e.prototype.setDebug=function(e){return this.ArtyomProperties.debug=!!e},e.prototype.simulateInstruction=function(e){if(!e||"string"!=typeof e)return console.warn("Cannot execute a non string command"),!1;var t=this.execute(e);return"object"!=typeof t?(console.warn("No command founded trying with "+e),!1):t.instruction?(t.instruction.smart?(this.debug("Smart command matches with simulation, executing","info"),t.instruction.action(t.index,t.wildcard.item,t.wildcard.full)):(this.debug("Command matches with simulation, executing","info"),t.instruction.action(t.index)),!0):void 0},e.prototype.soundex=function(e){var t=e.toLowerCase().split(""),r=t.shift(),n={a:"",e:"",i:"",o:"",u:"",b:1,f:1,p:1,v:1,c:2,g:2,j:2,k:2,q:2,s:2,x:2,z:2,d:3,t:3,l:4,m:5,n:5,r:6};return(r+t.map(function(e,t,o){return n[e]}).filter(function(e,t,o){return 0===t?e!==n[r]:e!==o[t-1]}).join("")+"000").slice(0,4).toUpperCase()},e.prototype.splitStringByChunks=function(e,t){e=e||"";for(var o=t=t||100,r=0,n=[];e[o];)" "==e[o++]&&(n.push(e.substring(r,o)),r=o,o+=t);return n.push(e.substr(r)),n},e.prototype.redirectRecognizedTextOutput=function(e){return"function"!=typeof e?(console.warn("Expected function to handle the recognized text ..."),!1):(this.ArtyomProperties.helpers.redirectRecognizedTextOutput=e,!0)},e.prototype.restart=function(){var o=this,r=o.ArtyomProperties;return new Promise(function(e,t){o.fatality().then(function(){o.initialize(r).then(e,t)})})},e.prototype.talk=function(e,t,o,r){var n=this,i=new SpeechSynthesisUtterance;i.text=e,i.volume=this.ArtyomProperties.volume,i.rate=this.ArtyomProperties.speed;var s=n.getVoice(n.ArtyomProperties.lang);r&&r.hasOwnProperty("lang")&&(s=n.getVoice(r.lang)),this.Device.isMobile?s&&(i.lang=s.lang):i.voice=s,1==t&&i.addEventListener("start",function(){n.ArtyomProperties.speaking=!0,n.debug("Event reached : "+n.ArtyomGlobalEvents.SPEECH_SYNTHESIS_START),n.triggerEvent(n.ArtyomGlobalEvents.SPEECH_SYNTHESIS_START),r&&"function"==typeof r.onStart&&r.onStart.call(i)}),o<=t&&i.addEventListener("end",function(){n.ArtyomProperties.speaking=!1,n.debug("Event reached : "+n.ArtyomGlobalEvents.SPEECH_SYNTHESIS_END),n.triggerEvent(n.ArtyomGlobalEvents.SPEECH_SYNTHESIS_END),r&&"function"==typeof r.onEnd&&r.onEnd.call(i)}),this.debug(t+" text chunk processed succesfully out of "+o),this.ArtyomGarbageCollection.push(i),window.speechSynthesis.speak(i)},e.prototype.say=function(e,r){var n=this,i=[];if(this.speechSupported()){if("string"!=typeof e)return console.warn("Artyom expects a string to speak "+typeof e+" given");if(!e.length)return console.warn("Cannot speak empty string");115<e.length?e.split(/,|:|\. |;/).forEach(function(e,t){if(115<e.length){var o=n.splitStringByChunks(e,115);i.push.apply(i,o)}else i.push(e)}):i.push(e),(i=i.filter(function(e){return e})).forEach(function(e,t){var o=t+1;e&&n.talk(e,o,i.length,r)}),n.ArtyomProperties.helpers.lastSay={text:e,date:new Date}}},e}();
var player_score,computer_score,player_move,computer_move,scoreboard;function reset(){player_score=document.getElementById("p_score"),computer_score=document.getElementById("c_score"),scoreboard={player:0,computer:0}}function randomMove(){var e=getRandomInt(3);return 0==e?"rock":1==e?"paper":"scissor"}function updateScoreboard(){player_score.innerText=scoreboard.player,computer_score.innerText=scoreboard.computer}function getRandomInt(e){return Math.floor(Math.random()*Math.floor(e))}window.onload=function(){reset()};
if(annyang){var commands={"rock paper scissor shoot":function(){var e=document.getElementById("computer_move");document.getElementById("player_move").innerText=label,e.innerText=randomMove(),updateScoreboard(),console.log("moved made!")}};annyang.addCommands(commands),annyang.start()}
var video,label,currentPrediction,classifier;function setup(){var e=(windowWidth-640)/2,i=(windowHeight,createCanvas(640,480));background(51),video=createCapture(VIDEO),classifier=ml5.imageClassifier("MobileNet",video,modelReady),video.hide(),i.position(e,0)}function draw(){image(video,0,0)}function modelReady(){console.log("Model is ready!!!"),classifier.predict(gotResults)}function gotResults(e,i){e?console.error(e):(label=i[0].label,classifier.predict(gotResults))}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
